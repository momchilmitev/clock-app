{"version":3,"sources":["hooks/useQuote.js","components/Quote/Quote.js","assets/icons/icon-sun.svg","assets/icons/icon-moon.svg","components/Time/Time.js","components/Button/Button.js","hooks/useData.js","components/App/App.js","index.js"],"names":["useQoute","useState","quote","setQuote","getQuote","a","fetch","res","json","data","useEffect","Quote","getQoute","className","content","onClick","author","Time","setNight","city","countryCode","timeType","Date","date","setDate","greeting","setGreeting","interval","setInterval","getHours","clearInterval","src","sun","moon","alt","getMinutes","Button","toggleInfo","open","useIpData","url","setData","fetchData","res2","data2","App","setOpen","night","useData","process","openClass","nightClass","country_code","time_zone","abbr","timezone","day_of_year","day_of_week","week_number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0ebabf1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useQoute = () => {\n  const [quote, setQuote] = useState(null);\n\n  const getQuote = async () => {\n    const res = await fetch('http://api.quotable.io/random');\n    const data = await res.json();\n    setQuote({ ...data });\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  return [quote, getQuote];\n};\n\nexport default useQoute;\n","import './Quote.scss';\nimport useQoute from '../../hooks/useQuote';\n\nconst Quote = () => {\n  const [quote, getQoute] = useQoute();\n\n  return (\n    <section className=\"quote\">\n      <div className=\"quote__action\">\n        <p className=\"quote__content\">{quote ? quote.content : null}</p>\n        <span className=\"btn--load\" onClick={getQoute}></span>\n      </div>\n      <p className=\"quote__author\">{quote ? quote.author : null}</p>\n    </section>\n  );\n};\n\nexport default Quote;\n","export default __webpack_public_path__ + \"static/media/icon-sun.cb7a2aac.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.83b9f0db.svg\";","import './Time.scss';\nimport { useState, useEffect } from 'react';\nimport sun from '../../assets/icons/icon-sun.svg';\nimport moon from '../../assets/icons/icon-moon.svg';\n\nconst Time = ({ setNight, city, countryCode, timeType }) => {\n  const [date, setDate] = useState(new Date());\n  const [greeting, setGreeting] = useState('morning');\n\n  const getGreeting = () => {\n    if (date.getHours() > 5 && date.getHours() < 12) {\n      setGreeting('morning');\n    } else if (date.getHours() >= 12 && date.getHours() < 18) {\n      setGreeting('afternoon');\n    } else {\n      setGreeting('evening');\n      setNight(true);\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n      getGreeting();\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <section className=\"time\">\n      <p className=\"time__title\">\n        <img\n          src={date.getHours() > 5 && date.getHours() < 18 ? sun : moon}\n          className=\"time__icon\"\n          alt=\"time icon\"\n        />\n        Good {greeting}\n        <span className=\"time__title--second\">, it's currently</span>\n      </p>\n      <h1 className=\"time__value\">\n        {date &&\n          `${date.getHours() < 10 ? '0' + date.getHours() : date.getHours()}:${\n            date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\n          }`}\n        <span className=\"time__type\">{timeType ? timeType : null}</span>\n      </h1>\n      <p className=\"time__location\">\n        In {city ? `${city}, ${countryCode}` : null}\n      </p>\n    </section>\n  );\n};\n\nexport default Time;\n","import './Button.scss';\n\nconst Button = ({ toggleInfo, open }) => {\n  return (\n    <button onClick={toggleInfo} className=\"btn--primary\">\n      {open ? 'less' : 'more'} <span></span>\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\n\nconst useIpData = (url) => {\n  const [data, setData] = useState(null);\n\n  const fetchData = async () => {\n    const res = await fetch(url);\n    const data = await res.json();\n    const res2 = await fetch(`http://worldtimeapi.org/api/ip`);\n    const data2 = await res2.json();\n\n    setData({ ...data, ...data2 });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nexport default useIpData;\n","import './App.scss';\nimport { useState } from 'react';\nimport Quote from '../Quote/Quote';\nimport Time from '../Time/Time';\nimport Button from '../Button/Button';\nimport useData from '../../hooks/useData';\n\nfunction App() {\n  const daysOfTheWeek = [7, 1, 2, 3, 4, 5, 6];\n  const [open, setOpen] = useState(false);\n  const [night, setNight] = useState(false);\n  const data = useData(\n    `https://api.ipdata.co/?api-key=${process.env.REACT_APP_IP_DATA_API_KEY}`\n  );\n\n  if (!data) {\n    return <div>Loading ...</div>;\n  }\n\n  const openClass = open ? 'app app--open' : 'app';\n  const nightClass = night ? 'app--night' : '';\n\n  const toggleInfo = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={`${openClass} ${nightClass}`}>\n      <section className=\"clock\">\n        <Quote />\n        <section className=\"clock__action\">\n          <Time\n            setNight={setNight}\n            city={data.city}\n            countryCode={data.country_code}\n            timeType={data.time_zone.abbr}\n          />\n          <Button toggleInfo={toggleInfo} open={open} />\n        </section>\n      </section>\n      <section className=\"info\">\n        <section className=\"info__section--left\">\n          <article className=\"info__detail\">\n            <p className=\"info__title\">current timezone</p>\n            <p className=\"info__value\">{data.timezone}</p>\n          </article>\n          <article className=\"info__detail\">\n            <p className=\"info__title\">Day of the year</p>\n            <p className=\"info__value\">{data.day_of_year}</p>\n          </article>\n        </section>\n        <section className=\"info__section--right\">\n          <article className=\"info__detail\">\n            <p className=\"info__title\">Day of the week</p>\n            <p className=\"info__value\">{daysOfTheWeek[data.day_of_week]}</p>\n          </article>\n          <article className=\"info__detail\">\n            <p className=\"info__title\">Week number</p>\n            <p className=\"info__value\">{data.week_number}</p>\n          </article>\n        </section>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}